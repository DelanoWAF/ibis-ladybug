name: Start tests of ladybug-frontend
on:
  push:
    paths:
      - '.github/workflows/start-frontend-test.yml'
      - 'pom.xml'
  pull_request:
    paths:
      - '.github/workflows/start-frontend-test.yml'
      - 'pom.xml'
jobs:
  dispatch:
    name: Start tests of ladybug-frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get referenced front-end version
      run: /bin/bash ./.github/workflows/getFrontendVersion.sh pom.xml frontendVersion.txt
    - name: Capture referenced front-end version
      id: get_frontendVersion
      run: echo "::set-output name=frontendVersion::$(cat frontendVersion.txt)"
    - name: Push repository_dispatch event to ladybug-frontend - no PR
      if: ${{ github.event_name == 'push' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.CI_ACCESSTOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: 'ibissource',
            repo: 'ladybug-frontend',
            workflow_id: 'testing.js.yml',
            ref: 'master',
            inputs: {
              useRealFrontend: 'true',
              frontendCommitToCheckout: 'tags/v${{ steps.get_frontendVersion.outputs.frontendVersion }}',
              backendCommitToCheckout: '${{ github.ref_name }}',
              mergeMasterToBranch: 'false'
            }
          })
    - name: Push repository_dispatch event to ladybug-frontend - PR
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.CI_ACCESSTOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: 'ibissource',
            repo: 'ladybug-frontend',
            workflow_id: 'testing.js.yml',
            ref: 'master',
            inputs: {
              useRealFrontend: 'true',
              frontendCommitToCheckout: 'tags/v${{ steps.get_frontendVersion.outputs.frontendVersion }}',
              backendCommitToCheckout: '${{ github.github.sha }}',
              mergeMasterToBranch: 'true'
            }
          })
